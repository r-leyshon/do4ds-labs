[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\n# import numpy as np\nfrom sklearn.linear_model import LinearRegression\n# from sklearn import preprocessing\nfrom vetiver import VetiverModel, vetiver_pin_write, VetiverAPI\nfrom pins import board_folder\nimport duckdb\nimport requests"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "1 Get Data",
    "text": "1 Get Data\n\n\nCode\ncon = duckdb.connect(\"my-db.duckdb\")\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\ncon.close()"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "2 Define Model and Fit",
    "text": "2 Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = False)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "3 Get some information",
    "text": "3 Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2708.3204686392337\nColumns Index(['bill_length_mm', 'species_Adelie', 'species_Chinstrap',\n       'species_Gentoo', 'sex_female', 'sex_male'],\n      dtype='object')\nCoefficients [  32.53688677 -265.36728566 -564.13282013  829.50010579 -273.68346204\n  273.68346204]"
  },
  {
    "objectID": "model.html#create-api",
    "href": "model.html#create-api",
    "title": "Model",
    "section": "4 Create API",
    "text": "4 Create API\n\n\nCode\n# run this stage in CLI\nb = board_folder(\"data/model\", allow_pickle_read=True)\nv = VetiverModel.from_pin(b, \"penguin_model\")\napp = VetiverAPI(v, check_prototype=True)\n\napp.run(port=8080)\n# may need to kill the server process eg kill 34246 when done"
  },
  {
    "objectID": "model.html#query-api",
    "href": "model.html#query-api",
    "title": "Model",
    "section": "5 Query API",
    "text": "5 Query API\n\n\nCode\n# once app is running, execute cell\npred_X = 20\nreq_data = [{\n  \"bill_length_mm\": pred_X,\n  \"species_Chinstrap\": False,\n  \"species_Gentoo\": False,\n  \"sex_male\": False\n}]\nreq = requests.post(\n  \"http://127.0.0.1:8080/predict\", json=req_data,\n  headers={\"Content-Type\": \"application/json\"},\n)\nres = req.json().get(\"predict\")[0]\nprint(f\"For bill length {pred_X}, body mass {res} is predicted.\")"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\nlibrary(palmerpenguins) \nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(DBI)\nlibrary(duckdb)\n\n\n\n\nCode\n# df &lt;- palmerpenguins::penguins%&gt;% drop_na()\n# query data from duckdb database\ncon = DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\ndf = dplyr::tbl(con, \"penguins\")\n\n\n\n\nCode\n  df %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n        ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  # not required, but illustrates that work has been pushed off to duckdb\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\nlibrary(palmerpenguins) \nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(DBI)\nlibrary(duckdb)\n\n\n\n\nCode\n# df &lt;- palmerpenguins::penguins%&gt;% drop_na()\n# query data from duckdb database\ncon = DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\ndf = dplyr::tbl(con, \"penguins\")\n\n\n\n\nCode\n  df %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n        ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  # not required, but illustrates that work has been pushed off to duckdb\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493"
  },
  {
    "objectID": "eda.html#penguin-size-vs-mass-by-species",
    "href": "eda.html#penguin-size-vs-mass-by-species",
    "title": "Penguins EDA",
    "section": "2 Penguin Size vs Mass by Species",
    "text": "2 Penguin Size vs Mass by Species\n\n\nCode\n# shifting backend to duckdb required refactoring pipe to keep operations\n# together\ndf %&gt;%\n  filter(!is.na(species), !is.na(bill_length_mm), !is.na(body_mass_g)) %&gt;%\n  mutate(colour = case_when(\n    (species == \"Adelie\") ~ \"#ff7400\",\n    (species == \"Chinstrap\") ~ \"#c35ccc\",\n    (species == \"Gentoo\") ~ \"#057275\",\n    TRUE ~ \"\"\n  )) %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, colour = colour)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_color_manual(\n    values = c(\"#ff7400\", \"#c35ccc\", \"#057275\"),\n    labels = c(\"Adelie\", \"Chinstrap\", \"Gentoo\")\n  ) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\nCode\nDBI::dbDisconnect(con, shutdown = TRUE)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Explore Palmer Penguins",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nPenguins EDA\n\n\n\n\n\n\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nModel\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]