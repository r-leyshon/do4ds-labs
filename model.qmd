---
title: "Model"
format:
  html:
    code-fold: true
jupyter: 
  kernelspec:
    name: "conda-env-do4ds-env-py"
    language: "python"
    display_name: "do4ds-env"
---


```{python}
from palmerpenguins import penguins
from pandas import get_dummies
# import numpy as np
from sklearn.linear_model import LinearRegression
# from sklearn import preprocessing
from vetiver import VetiverModel, vetiver_pin_write, VetiverAPI
from pins import board_folder
import duckdb
import requests

```

## Get Data


```{python}
con = duckdb.connect("my-db.duckdb")
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()

```

```{python}
#| echo: false
#| eval: false
# df = penguins.load_penguins().dropna()

# df.head(3)
```

## Define Model and Fit


```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = False)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information


```{python}

print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
#| echo: false
#| eval: false
# save the model
# v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
# # create a board with pins
# model_board = board_folder(path="data/model", versioned=True, allow_pickle_read=True)
# vetiver_pin_write(model_board, v)

```

## Create API

```{python}
#| eval: false
# run this stage in CLI
b = board_folder("data/model", allow_pickle_read=True)
v = VetiverModel.from_pin(b, "penguin_model")
app = VetiverAPI(v, check_prototype=True)

app.run(port=8080)
# may need to kill the server process eg kill 34246 when done

```

## Query API

```{python}
#| eval: false
# once app is running, execute cell
pred_X = 20
req_data = [{
  "bill_length_mm": pred_X,
  "species_Chinstrap": False,
  "species_Gentoo": False,
  "sex_male": False
}]
req = requests.post(
  "http://127.0.0.1:8080/predict", json=req_data,
  headers={"Content-Type": "application/json"},
)
res = req.json().get("predict")[0]
print(f"For bill length {pred_X}, body mass {res} is predicted.")
```
