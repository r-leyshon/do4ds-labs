[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\n# import numpy as np\nfrom sklearn.linear_model import LinearRegression\n# from sklearn import preprocessing\nfrom vetiver import VetiverModel, vetiver_pin_write, VetiverAPI\nfrom pins import board_folder"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "1 Get Data",
    "text": "1 Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "2 Define Model and Fit",
    "text": "2 Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = False)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "3 Get some information",
    "text": "3 Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2708.3204686392337\nColumns Index(['bill_length_mm', 'species_Adelie', 'species_Chinstrap',\n       'species_Gentoo', 'sex_female', 'sex_male'],\n      dtype='object')\nCoefficients [  32.53688677 -265.36728566 -564.13282013  829.50010579 -273.68346204\n  273.68346204]\n\n\n\n\nCode\n# save the model\nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)\n# # create a board with pins\nmodel_board = board_folder(path=\"data/model\", versioned=True, allow_pickle_read=True)\nvetiver_pin_write(model_board, v)\n\n\nModel Cards provide a framework for transparent, responsible reporting. \n Use the vetiver `.qmd` Quarto template as a place to start, \n with vetiver.model_card()\nWriting pin:\nName: 'penguin_model'\nVersion: 20240103T093319Z-5b870"
  },
  {
    "objectID": "model.html#create-api",
    "href": "model.html#create-api",
    "title": "Model",
    "section": "4 Create API",
    "text": "4 Create API\n\n\nCode\nb = board_folder('data/model', allow_pickle_read=True)\nv = VetiverModel.from_pin(b, 'penguin_model')\napp = VetiverAPI(v, check_prototype=True)\n\n# app.run(port=8080)\n# may need to kill the server process eg kill 34246"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n\n\n\nCode\ndf &lt;- palmerpenguins::penguins%&gt;% drop_na()\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n\n\n\nCode\ndf &lt;- palmerpenguins::penguins%&gt;% drop_na()\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066"
  },
  {
    "objectID": "eda.html#penguin-size-vs-mass-by-species",
    "href": "eda.html#penguin-size-vs-mass-by-species",
    "title": "Penguins EDA",
    "section": "2 Penguin Size vs Mass by Species",
    "text": "2 Penguin Size vs Mass by Species\n\n\nCode\ndf = df %&gt;%\n  mutate(colour = case_when(\n    (species == \"Adelie\") ~ \"#ff7400\",\n    (species == \"Chinstrap\") ~ \"#c35ccc\",\n    (species == \"Gentoo\") ~ \"#057275\",\n    TRUE ~ \"\",\n  ))\n\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, colour=colour)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  scale_color_manual(values = levels(factor(df$colour, levels=c(\"#ff7400\", \"#c35ccc\", \"#057275\"))), \n                   labels = c(\"Adelie\",\"Chinstrap\",\"Gentoo\")) +\n                   theme_bw()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring Palmer Penguins",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nPenguins EDA\n\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nModel\n\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]