{
  "hash": "024f885d86ec57f487d174383d506953",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Model\nformat:\n  html:\n    code-fold: true\n    highlight-style: github\n---\n\n::: {#073324c5 .cell execution_count=1}\n``` {.python .cell-code}\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\n# import numpy as np\nfrom sklearn.linear_model import LinearRegression\n# from sklearn import preprocessing\nfrom vetiver import VetiverModel, vetiver_pin_write, VetiverAPI\nfrom pins import board_folder\nimport duckdb\n```\n:::\n\n\n## Get Data\n\n::: {#1377c712 .cell execution_count=2}\n``` {.python .cell-code}\ncon = duckdb.connect(\"my-db.duckdb\")\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\ncon.close()\n```\n:::\n\n\n\n\n## Define Model and Fit\n\n::: {#db02447c .cell execution_count=4}\n``` {.python .cell-code}\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = False)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)\n```\n:::\n\n\n## Get some information\n\n::: {#f424eea2 .cell execution_count=5}\n``` {.python .cell-code}\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR^2 0.8555368759537614\nIntercept 2708.3204686392337\nColumns Index(['bill_length_mm', 'species_Adelie', 'species_Chinstrap',\n       'species_Gentoo', 'sex_female', 'sex_male'],\n      dtype='object')\nCoefficients [  32.53688677 -265.36728566 -564.13282013  829.50010579 -273.68346204\n  273.68346204]\n```\n:::\n:::\n\n\n::: {#0d36d937 .cell execution_count=6}\n``` {.python .cell-code}\n# save the model\nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)\n# # create a board with pins\nmodel_board = board_folder(path=\"data/model\", versioned=True, allow_pickle_read=True)\nvetiver_pin_write(model_board, v)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nModel Cards provide a framework for transparent, responsible reporting. \n Use the vetiver `.qmd` Quarto template as a place to start, \n with vetiver.model_card()\nWriting pin:\nName: 'penguin_model'\nVersion: 20240115T082216Z-5b870\n```\n:::\n:::\n\n\n## Create API\n\n::: {#d084bcb2 .cell execution_count=7}\n``` {.python .cell-code}\nb = board_folder('data/model', allow_pickle_read=True)\nv = VetiverModel.from_pin(b, 'penguin_model')\napp = VetiverAPI(v, check_prototype=True)\n\n# app.run(port=8080)\n# may need to kill the server process eg kill 34246\n```\n:::\n\n\n",
    "supporting": [
      "model_files"
    ],
    "filters": [],
    "includes": {}
  }
}